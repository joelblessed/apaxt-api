{
    "sourceFile": "index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1745175215233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745175448507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,14 +85,8 @@\n     allowedHeaders:\"Content-Type, Athorization\"\n \n }))\n \n-const dbPath = path.join(__dirname, \"./jsonFiles/db.json\");\n-const cartPath = path.join(__dirname, \"./jsonFiles/cart.json\");\n-const accountPath = path.join(__dirname, \"./jsonFiles/account.json\");\n-const ordersPath = path.join(__dirname, \"./jsonFiles/orders.json\");\n-const wishlistPath = path.join(__dirname, \"./jsonFiles/wishlist.json\");\n-const DB_FILE = \"jsonFile/cart.json\"; // Path to your local db.json\n \n app.use(\"/\", ordersRoutes);\n app.use(\"/\", cartRoutes);\n app.use(\"/\", cartJRoutes);\n"
                }
            ],
            "date": 1745175215233,
            "name": "Commit-0",
            "content": "\n\n\n\n\n// app.use(cors())\n\n\n// // Start Server\n// const PORT = process.env.PORT || 5000;\n// app.listen(PORT, () => console.log(`Server running on port ${PORT}`));\n\n\n\n\n\nconst express = require(\"express\");\nconst axios = require('axios');\nconst fs = require(\"fs\");\nconst multer = require(\"multer\");\nconst path = require(\"path\");\nconst cors =require(\"cors\")\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\nconst dotenv = require(\"dotenv\");\nconst nodemailer = require(\"nodemailer\");\nconst { v4: uuidv4 } = require('uuid');  // UUID generation for unique identifiers\nconst bodyParser = require('body-parser');  // Parse incoming request bodies\n\ndotenv.config();\n\n\n// ////////////////\nconst ordersRoutes = require(\"./jsFiles/orders\");\nconst cartRoutes = require(\"./jsFiles/cart\");\nconst cartJRoutes = require(\"./jsFiles/cartJ\");\nconst wishlistRoutes = require(\"./jsFiles/wishlist\");\nconst signUpRoutes = require(\"./jsFiles/signUp\");\nconst signInRoutes = require(\"./jsFiles/signIn\");\nconst editProfileRoutes = require(\"./jsFiles/editProfile\");\nconst editProfilePictureRoutes = require(\"./jsFiles/editProfilePicture\");\nconst formUploadRoutes = require(\"./jsFiles/formUpload\");\nconst productsRoutes = require(\"./jsFiles/products\");\nconst passwardResetRoutes = require(\"./jsFiles/passwardReset\");\nconst ordersMangementRoutes = require(\"./jsFiles/ordersMangement\");\nconst paymentRoutes = require(\"./jsFiles/payment\");\nconst logsRoutes = require(\"./jsFiles/logs\");\nconst JWT_SECRET = process.env.JWT_SECRET \n\n\nconst app = express();\n\napp.use(bodyParser.json({limit: \"50mb\"}));  // Support for JSON-encoded bodies\napp.use(bodyParser.urlencoded({limit: \"50mb\", extended: true}));\napp.use(cors());\napp.use(express.json()); // Middleware to parse JSON requests\n// app.use(\"upload\", express.static(\"upload\"))\n\n// Middleware to verify JWT token\nconst authenticateToken = (req, res, next) => {\n  const authHeader = req.headers['authorization'];\n  const token = authHeader && authHeader.split(' ')[1]; // Format: \"Bearer <token>\"\n\n  if (!token) {\n    return res.status(401).json({ message: 'Access token is required' });\n  }\n\n  jwt.verify(token, JWT_SECRET, (err, user) => {\n    if (err) {\n      return res.status(403).json({ message: 'Invalid or expired token' });\n    }\n    req.user = user; // Attach the decoded user data to the request\n    next();\n  });\n};\n\napp.use(express.urlencoded({extended:true}))\n\napp.use(cors({\n    origin:[\n      \"http://localhost:3000\",\n      \"https://apaxt.netlify.app\"\n    ],\n    methods:\"GET, POST, PUT, DELETE\",\n    allowedHeaders:\"Content-Type, Athorization\"\n\n}))\n\nconst dbPath = path.join(__dirname, \"./jsonFiles/db.json\");\nconst cartPath = path.join(__dirname, \"./jsonFiles/cart.json\");\nconst accountPath = path.join(__dirname, \"./jsonFiles/account.json\");\nconst ordersPath = path.join(__dirname, \"./jsonFiles/orders.json\");\nconst wishlistPath = path.join(__dirname, \"./jsonFiles/wishlist.json\");\nconst DB_FILE = \"jsonFile/cart.json\"; // Path to your local db.json\n\napp.use(\"/\", ordersRoutes);\napp.use(\"/\", cartRoutes);\napp.use(\"/\", cartJRoutes);\napp.use(\"/\", wishlistRoutes);\napp.use(\"/\", signUpRoutes);\napp.use(\"/\", signInRoutes);\napp.use(\"/\", editProfileRoutes);\napp.use(\"/\", editProfilePictureRoutes);\napp.use(\"/\", formUploadRoutes);\napp.use(\"/\", productsRoutes);\napp.use(\"/\", ordersMangementRoutes);\napp.use(\"/\", passwardResetRoutes);\napp.use(\"/\", paymentRoutes);\napp.use(\"/\", logsRoutes);\n\n\napp.use(\"/public/profileImages\", express.static(path.join(__dirname,\"public\",\"profileImages\"))); // Serve profile images\n\n\n\n\n// ///////////////////////////////////////////////////////////////////////////////////////////\n// Start Server\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`))\n\n\n"
        }
    ]
}